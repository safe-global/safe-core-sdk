{
  "compilerOptions": {
    "target": "ES2021" /* Specify ECMAScript target version: 'ES5' (default), 'ES2019', 'ES2020', 'ES2021', 'ES2022', 'ES2023' or 'ESNEXT'. */,
    "module": "CommonJS" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "allowJs": false /* Allow javascript files to be compiled. */,
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "sourceMap": true /* Generates corresponding '.map' file. */,
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* Enable strict null checks. */,
    "strictFunctionTypes": true /* Enable strict checking of function types. */,
    "strictBindCallApply": true /* Enable strict 'bind', 'call', and 'apply' methods on functions. */,
    "strictPropertyInitialization": true /* Enable strict checking of property initialization in classes. */,
    "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
    "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "resolveJsonModule": true,
    "baseUrl": "./",
    "paths": {
      "@safe-global/account-abstraction-kit-poc/*": ["./packages/account-abstraction-kit/src/*"],
      "@safe-global/api-kit/*": ["./packages/api-kit/src/*"],
      "@safe-global/auth-kit/*": ["./packages/auth-kit/src/*"],
      "@safe-global/onramp-kit/*": ["./packages/onramp-kit/src/*"],
      "@safe-global/protocol-kit/*": ["./packages/protocol-kit/src/*"],
      "@safe-global/protocol-kit/typechain/*": ["./packages/protocol-kit/typechain/*"],
      "@safe-global/protocol-kit/hardhat/*": ["./packages/protocol-kit/hardhat/*"],
      "@safe-global/relay-kit/*": ["./packages/relay-kit/src/*"],
      "@safe-global/safe-core-sdk-types/*": ["./packages/safe-core-sdk-types/src/*"]
    }
  },
  "exclude": ["**/dist", "**/node_modules"]
}
